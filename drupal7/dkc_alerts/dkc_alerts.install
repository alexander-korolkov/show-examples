<?php
/**
 * @file
 * Represents schema definition and all logic related to (un)installing module.
 */

/**
 * Implements hook_schema().
 */
function dkc_alerts_schema() {
  $schema['dkc_alerts'] = array(
    'description' => 'The base table for dkc alerts.',
    'fields' => array(
      'aid' => array(
        'description' => 'The primary identifier for a dkc alert.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The name of dkc alert',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'The description of dkc alert',
        'type' => 'varchar',
        'length' => 511,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the alert is enabled.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'body' => array(
        'description' => 'The body of alert',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'color' => array(
        'description' => 'The background color of alert',
        'type' => 'varchar',
        'length' => 63,
        'not null' => TRUE,
        'default' => '',
      ),
      'textcolor' => array(
        'description' => 'The color of alert text',
        'type' => 'varchar',
        'length' => 63,
        'not null' => TRUE,
        'default' => '',
      ),
      'region' => array(
        'description' => 'The region where alert should be displayed',
        'type' => 'varchar',
        'length' => 63,
        'not null' => TRUE,
        'default' => '',
      ),
      'start' => array(
        'description' => 'The Unix timestamp when notification starts.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'end' => array(
        'description' => 'The Unix timestamp when notification ends.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'icon' => array(
        'description' => 'Boolean indicating when error icon should be displayed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the alert was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the alert was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'idx_dkc_alerts_changed' => array('changed'),
      'idx_dkc_alerts_created' => array('created'),
    ),
    'primary key' => array('aid'),
  );

  $schema['dkc_alert_config'] = array(
    'description' => 'The alerts config.',
    'fields' => array(
      'cid' => array(
        'description' => 'The primary identifier for a dkc alert config.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'aid' => array(
        'description' => 'Id of related alert.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'path' => array(
        'description' => 'The path where alert should be displayed',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'regexpression' => array(
        'description' => 'Boolean indicating when path is regular expression.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('cid'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function dkc_alerts_uninstall() {
  if (db_table_exists('dkc_alerts')) {
    db_drop_table('dkc_alerts');
  }

  if (db_table_exists('dkc_alert_config')) {
    db_drop_table('dkc_alert_config');
  }
}
